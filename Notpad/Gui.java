/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Notpad;

import java.awt.Color;
import java.awt.FileDialog;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author hadi
 */
public class Gui extends javax.swing.JFrame {
    private String openFileName;
    private String saveFileName;
    private int saveTime = 1;
    private saveForm sf;

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }

    public void setSaveFilename() {
//        sf = new saveForm();
        saveFileName = sf.getPathName();
    }
    public String getSaveFilename()
    {
        return this.saveFileName;
    }
    
    public static String getTextBoxValue(){
        String str = textBox.getText();
        return str;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        textBox = new javax.swing.JTextArea();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newMenu = new javax.swing.JMenuItem();
        openMenu = new javax.swing.JMenuItem();
        savemenu = new javax.swing.JMenuItem();
        saveAsMenu = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        themesMenu = new javax.swing.JMenu();
        defaultColorMenu = new javax.swing.JRadioButtonMenuItem();
        grayColorMenu = new javax.swing.JRadioButtonMenuItem();
        blackColorMenu = new javax.swing.JRadioButtonMenuItem();
        aboutMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textBox.setColumns(20);
        textBox.setRows(5);
        jScrollPane1.setViewportView(textBox);

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenu1.setText("File");

        newMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newMenu.setText("New");
        newMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuActionPerformed(evt);
            }
        });
        jMenu1.add(newMenu);

        openMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenu.setText("Open");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        jMenu1.add(openMenu);

        savemenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        savemenu.setText("Save");
        savemenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savemenuActionPerformed(evt);
            }
        });
        jMenu1.add(savemenu);

        saveAsMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveAsMenu.setText("Save As â€¦");
        saveAsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveAsMenu);
        jMenu1.add(jSeparator1);

        exitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenu);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        themesMenu.setText("Themes");
        themesMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themesMenuActionPerformed(evt);
            }
        });

        defaultColorMenu.setSelected(true);
        defaultColorMenu.setText("Default");
        defaultColorMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultColorMenuActionPerformed(evt);
            }
        });
        themesMenu.add(defaultColorMenu);

        grayColorMenu.setText("Gray");
        grayColorMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grayColorMenuActionPerformed(evt);
            }
        });
        themesMenu.add(grayColorMenu);

        blackColorMenu.setText("Black");
        blackColorMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackColorMenuActionPerformed(evt);
            }
        });
        themesMenu.add(blackColorMenu);

        jMenu2.add(themesMenu);

        aboutMenu.setText("About");
        aboutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuActionPerformed(evt);
            }
        });
        jMenu2.add(aboutMenu);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuActionPerformed
        // TODO add your handling code here:
        //NEW button
        if("".equals(textBox.getText())){
            saveFileName = null;
            sf.setPathName(null);
            saveTime = 1;
        }
        else{
            int i = JOptionPane.showConfirmDialog(null, "Are you sure to discard changes?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(i == 0){
                textBox.setText("");
                saveFileName = null;
                sf.setPathName(null);
                saveTime = 1;
            }
        }
    }//GEN-LAST:event_newMenuActionPerformed

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        // TODO add your handling code here:
        //OPEN button
        FileDialog fd = new FileDialog(this, "Open", FileDialog.LOAD);
        fd.setVisible(true);
        openFileName = fd.getFiles()[0].getAbsolutePath();
        textBox.setText(Input.readData(openFileName));
        
    }//GEN-LAST:event_openMenuActionPerformed

    private void savemenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savemenuActionPerformed
        // TODO add your handling code here:
        //SAVE button
        if (saveTime == 1 || sf.getPathName()==null) {
            sf = new saveForm();
            sf.setVisible(true);
            sf.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            sf.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent e) {
                    super.windowClosing(e);
                    sf.setVisible(false);
                }
            
            });
        }
        else{
            setSaveFilename();
            Output.writeData(saveFileName, textBox.getText());
        }
        saveTime++;
    }//GEN-LAST:event_savemenuActionPerformed

    private void saveAsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuActionPerformed
        // TODO add your handling code here:
        //SAVE AS button
        sf = new saveForm();
        sf.setVisible(true);
        sf.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        sf.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                super.windowClosing(e);
                sf.setVisible(false);
            }      
        });
        
    }//GEN-LAST:event_saveAsMenuActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        // TODO add your handling code here:
        //EXIT button
        int c;
        c = JOptionPane.showConfirmDialog(null, "Are you sure you want to Exit?", "Confirmation", 0);
        if (c == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMenuActionPerformed

    private void themesMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themesMenuActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_themesMenuActionPerformed

    private void defaultColorMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultColorMenuActionPerformed
        // TODO add your handling code here:
        //DEFAULT THEME
        defaultColorMenu.setSelected(true);
        grayColorMenu.setSelected(false);
        blackColorMenu.setSelected(false);
        
        textBox.setBackground(Color.white);
        textBox.setForeground(Color.black);
        textBox.setCaretColor(Color.black);
    }//GEN-LAST:event_defaultColorMenuActionPerformed

    private void grayColorMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grayColorMenuActionPerformed
        // TODO add your handling code here:
        //GRAY THEME
        defaultColorMenu.setSelected(false);
        grayColorMenu.setSelected(true);
        blackColorMenu.setSelected(false);
        
        textBox.setBackground(Color.lightGray);
        textBox.setForeground(Color.black);
        textBox.setCaretColor(Color.black);
    }//GEN-LAST:event_grayColorMenuActionPerformed

    private void blackColorMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackColorMenuActionPerformed
        // TODO add your handling code here:
        //BLACK THEME
        defaultColorMenu.setSelected(false);
        grayColorMenu.setSelected(false);
        blackColorMenu.setSelected(true);
        
        textBox.setBackground(Color.BLACK);
        textBox.setForeground(Color.WHITE);
        textBox.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_blackColorMenuActionPerformed

    private void aboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuActionPerformed
        // TODO add your handling code here:
        //ABOUT
        JOptionPane.showMessageDialog(null, "Notepad version 1.0\nCreated by Hadi Najafi\nA TIHU SoftÂ© Application", "About", -1);
    }//GEN-LAST:event_aboutMenuActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenu;
    private javax.swing.JRadioButtonMenuItem blackColorMenu;
    private javax.swing.JRadioButtonMenuItem defaultColorMenu;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JRadioButtonMenuItem grayColorMenu;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem newMenu;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JMenuItem saveAsMenu;
    private javax.swing.JMenuItem savemenu;
    private static javax.swing.JTextArea textBox;
    private javax.swing.JMenu themesMenu;
    // End of variables declaration//GEN-END:variables
}
